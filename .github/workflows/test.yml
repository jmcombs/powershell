name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install bats-core
        run: |
          git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
          cd /tmp/bats-core
          sudo ./install.sh /usr/local
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      - name: Run unit tests
        run: |
          bats tests/unit/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: |
            tests/
            /tmp/env_vars
          retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install bats-core
        run: |
          git clone https://github.com/bats-core/bats-core.git /tmp/bats-core
          cd /tmp/bats-core
          sudo ./install.sh /usr/local

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      - name: Run integration tests
        env:
          CI: true
        run: |
          bats tests/integration/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            tests/
            /tmp/env_vars
          retention-days: 7

  script-validation:
    name: Script Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run shellcheck on scripts
        run: |
          find scripts/ -name "*.sh" -exec shellcheck {} \;

      - name: Check script permissions
        run: |
          find scripts/ -name "*.sh" -exec test -x {} \; || {
            echo "Some scripts are not executable:"
            find scripts/ -name "*.sh" ! -executable
            exit 1
          }

      - name: Validate script syntax
        run: |
          find scripts/ -name "*.sh" -exec bash -n {} \;

  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download unit test results
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results
          path: ./test-results/unit/

      - name: Download integration test results
        uses: actions/download-artifact@v4
        with:
          name: integration-test-results
          path: ./test-results/integration/

      - name: Generate test summary
        run: |
          echo "# Test Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Results" >> test-summary.md
          echo "" >> test-summary.md
          
          if [ -d "./test-results/unit" ]; then
            echo "✅ Unit tests completed" >> test-summary.md
          else
            echo "❌ Unit tests failed" >> test-summary.md
          fi
          
          if [ -d "./test-results/integration" ]; then
            echo "✅ Integration tests completed" >> test-summary.md
          else
            echo "❌ Integration tests failed" >> test-summary.md
          fi
          
          echo "" >> test-summary.md
          echo "## Files Tested" >> test-summary.md
          echo "" >> test-summary.md
          echo "- \`scripts/get-net-pwsh-versions.sh\`" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Test Categories" >> test-summary.md
          echo "" >> test-summary.md
          echo "- **Unit Tests**: Function-level testing with mocked dependencies" >> test-summary.md
          echo "- **Integration Tests**: End-to-end testing with real network calls" >> test-summary.md
          echo "- **Script Validation**: Syntax and style checking with shellcheck" >> test-summary.md

      - name: Upload test summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
          retention-days: 30
